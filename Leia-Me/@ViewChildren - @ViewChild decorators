Observar os elemento do Html ou colher informacoes  os dados semelhante (document.getElementById('#teste'))
@ViewChildren 
    Seleciona uma lista de elemento
@ViewChild 
    Seleciona um  elemento na tela adc click essas coisas


- Component Html
<div class="container main-container">
    <h1 #teste>Lista Produtos</h1>
</div>    

- Component TS
import { AfterViewInit, Component, ElementRef, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';
import { fromEvent, Observable } from 'rxjs';
import { ProdutoDetalheComponent } from '../components/produto-card-detalhe.component';
import { ProdutoCountComponent } from '../components/produto-count.component';
import { Produto } from '../models/produto';

@Component({
  selector: 'app-produto-dashboard',
  templateUrl: './produto-dashboard.component.html',
  styles: []
})
export class ProdutoDashboardComponent implements OnInit, AfterViewInit {

  produtos: Produto[]

  @ViewChild(ProdutoCountComponent,{ static: false }) contador : ProdutoCountComponent;
  @ViewChild('teste', { static: false }) mensagemTela: ElementRef;

  @ViewChildren(ProdutoDetalheComponent) botoes : QueryList<ProdutoDetalheComponent>;

  constructor() { }

  ngOnInit() {
   
  }
  ngAfterViewInit(): void {
  
    console.log('Objeto do Contador:',this.contador.produtos)

    let clickTexto: Observable<any> = fromEvent(this.mensagemTela.nativeElement,'click')

    clickTexto.subscribe(()=>{
      alert('Clicou no Texto');
      return;
    })

    console.log(this.botoes);

    this.botoes.forEach(p=> {
      console.log(p.produto)
    });

  }
  mudarStatus(event: Produto) {
    event.ativo = !event.ativo;
  }

}
