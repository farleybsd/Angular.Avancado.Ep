<div class="container main-container">
    <h4>Demo Cadastro</h4>
    <hr />
    <form novalidate (ngSubmit)="adicionarUsuario()" [formGroup]="cadastroForm">
        <div class="form-horizontal">

            <div class="form-group">
                <label class="col-md-2 control-label" for="nome">Nome Completo</label>
                <div class="col-md-10">
                    <input class="form-control" id="nome" type="text" placeholder="Nome (requerido)"
                        formControlName="nome"
                        [ngClass]="{'is-invalid':cadastroForm.get('nome').errors && cadastroForm.get('nome').dirty || cadastroForm.get('nome').touched }" />
                    <span class="text-danger"
                        *ngIf="cadastroForm.get('nome').errors && cadastroForm.get('nome').dirty || cadastroForm.get('nome').touched">
                        <p>Preencha o campo nome</p>
                    </span>
                </div>
            </div>

            <div class="form-group">
                <label class="col-md-2 control-label" for="cpf">CPF</label>
                <div class="col-md-10">
                    <input class="form-control" id="cpf" type="text" placeholder="cpf (requerido)"
                    />
                </div>
            </div>

            <div class="form-group">
                <label class="col-md-2 control-label" for="email">Email</label>
                <div class="col-md-10">
                    <input 
                    class="form-control" 
                    id="email" 
                    type="text" 
                    placeholder="email (requerido)"
                   formControlName="email" 
                   [ngClass]="{'is-invalid':cadastroForm.get('email').errors && cadastroForm.get('email').dirty || cadastroForm.get('nome').touched }" />

                    <span class="text-danger"
                        *ngIf="cadastroForm.get('email')?.errors?.required && cadastroForm.get('email').dirty || cadastroForm.get('email').touched">
                        <p>Preencha o campo Email</p>
                    </span>

                    <span class="text-danger"
                        *ngIf="cadastroForm.get('email')?.errors?.email && cadastroForm.get('email').dirty || cadastroForm.get('email').touched">
                        <p>E-mail formato invalido</p>
                    </span>
                </div>
            </div>

            <div class="form-group">
                <label class="col-md-2 control-label" for="Senha">Senha</label>
                <div class="col-md-10">
                    <input class="form-control" id="Senha" type="text" placeholder="Senha (requerido)"
                        formControlName="Senha" />
                </div>
            </div>

            <div class="form-group">
                <label class="col-md-2 control-label" for="SenhaConfirmacao">Confirme a senha</label>
                <div class="col-md-10">
                    <input class="form-control" id="SenhaConfirmacao" type="text"
                        placeholder="Confirme a senha (requerido)" formControlName="SenhaConfirmacao" />
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-4 col-md-offset-2">
                    <span>
                        <button class="btn btn-success" id="Registrar" [disabled]="!cadastroForm.valid" type="submit">
                            Registrar
                        </button>
                    </span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-4 col-md-offset-2">
                    <p>Formulario Valido : {{cadastroForm.valid}}</p>
                    <p>Formulario Tocado : {{cadastroForm.touched}}</p>
                    <p>Formulario Sujo : {{cadastroForm.dirty}}</p>
                    <p>Formulario : {{formResult}}</p>
                </div>
            </div>

        </div>
    </form>
</div>





import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';
import { Usuario } from './models/Usuario';

@Component({
  selector: 'app-cadastro',
  templateUrl: './cadastro.component.html'
})
export class CadastroComponent implements OnInit {

  cadastroForm: FormGroup;
  usuario: Usuario;
  formResult: string = '';
  constructor(private fb: FormBuilder) { }

  ngOnInit() {
    this.cadastroForm = this.fb.group({
      nome: ['', Validators.required],
      cpf: [''],
      Email: ['',[Validators.required,Validators.email]],
      Senha: [''],
      SenhaConfirmacao: ['']
    });
  }

  adicionarUsuario() {
    if (this.cadastroForm.dirty && this.cadastroForm.valid) {
      this.usuario = Object.assign({}, this.usuario, this.cadastroForm.value);
      this.formResult = JSON.stringify(this.cadastroForm.value);
    }
    else{
      this.formResult ="Nao Submeteu!!!";
    }
  }

}
