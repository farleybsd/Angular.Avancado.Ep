1 Ateracao do Servico
import { Inject, Injectable, Injector } from "@angular/core";
import {HttpClient} from "@angular/common/http"
import { BarUnidadeConfig, BAR_UNIDADE_CONFIG } from "./bar.config";

export function BarFactory(/*http: HttpClient,*/injector:Injector){
    return new BarService(/*http,*/injector.get(BAR_UNIDADE_CONFIG));
}
@Injectable()
export class BarService{

    constructor(
        //private http: HttpClient,
        @Inject(BAR_UNIDADE_CONFIG) private config : BarUnidadeConfig
        ) {}

    public ObterUnidade() : string{
        return 'UnidadeId' + this.config.UnidadeId + 'Token' + this.config.unidadeToken
    }    
    obterBebidas() : string{
        return 'Bebidas';
    }

    obterPorcoes() : string{
        return 'Porcoes';
    }

    obterRefeicoes() : string{
        return 'Refeicoes';
    }
}

export class BarServiceMock{

    obterBebidas() : string{
        return 'Mock';
    }

    obterPorcoes() : string{
        return 'Mock';
    }

    obterRefeicoes() : string{
        return 'Mock';
    }
}

2 Component 
import { HttpClient } from '@angular/common/http';
import { Component, Inject, Injector, OnInit } from '@angular/core';
import { BarUnidadeConfig, BAR_UNIDADE_CONFIG } from './bar.config';
import { BarFactory, BarService, BarServiceMock } from './bar.service';

@Component({
  selector: 'app-bar',
  templateUrl: './bar.component.html',
  providers: [
    //{provide:BarService,useClass:BarServiceMock}
    {provide:BarService,useClass:BarService},
    {
      provide:BarService,useFactory:BarFactory,
      deps:[
        //HttpClient,
        Injector
      ]
    }
  ]
})
export class BarComponent  implements OnInit {

  ConfigManual: BarUnidadeConfig;
  Config: BarUnidadeConfig;
  barBebida1 : string;
  dadosUnidade:string;

  constructor(
    private barService:BarService,
    @Inject('ConfigManualUnidade') private ApiConfigManual: BarUnidadeConfig,
    @Inject(BAR_UNIDADE_CONFIG) private ApiConfig: BarUnidadeConfig
    ) { }

  ngOnInit() {
    this.barBebida1 = this.barService.obterBebidas();
    this.ConfigManual = this.ApiConfigManual;
    this.Config = this.ApiConfig;
    this.dadosUnidade = this.barService.ObterUnidade();
  }

}

3 - Component html
<div class="container main-container">
    <h2>Bar</h2>
    <div>
        Bebida 1: {{barBebida1}}
    </div>
    <div>
        Unidade Manual: {{ConfigManual.UnidadeId}} - Token Manual: {{ConfigManual.unidadeToken}}
    </div>
    <div>
        Unidade: {{Config.UnidadeId}} - Token: {{Config.unidadeToken}}
    </div>
    <div>
       Dados Unidade - (Service): {{dadosUnidade}}
    </div>
</div>
